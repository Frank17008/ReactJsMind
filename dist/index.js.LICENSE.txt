/* binding */

/* harmony default export */

/* see http://stackoverflow.com/a/6248722/2519373 */

/* webpack/runtime/compat get default export */

/*#__PURE__*/

/**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options
     * @param {Function} options.filter - Should return true if passed node should be included in the output
     *          (excluding node means excluding it's children as well). Not called on the root node.
     * @param {String} options.bgcolor - color for the background, any valid CSS color value.
     * @param {Number} options.width - width to be applied to node before rendering.
     * @param {Number} options.height - height to be applied to node before rendering.
     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.
     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),
                defaults to 1.0.
     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch
     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url
     * @return {Promise} - A promise that is fulfilled with a SVG image data URL
     * */

/**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options, @see {@link toSvg}
     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL
     * */

/**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options, @see {@link toSvg}
     * @return {Promise} - A promise that is fulfilled with a PNG image blob
     * */

/**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options, @see {@link toSvg}
     * @return {Promise} - A promise that is fulfilled with a PNG image data URL
     * */

/**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options, @see {@link toSvg}
     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.
     * */

/**
   * 创建事件处理函数, 缓存函数地址
   */

/**
 * 基于jsmind的React组件
 * https://gitee.com/314079846/jsmind/blob/master/docs/zh/3.operation.md
 */

/**
* @license BSD-3-Clause
* @copyright 2014-2023 hizzgdev@163.com
*
* Project Home:
*   https://github.com/hizzgdev/jsmind/
*/

/************************************************************************/

/******/

/***/

// <Delete>

// <Enter>

// <F2>

// <Insert>

// <Left>

// <Right>

// <Space>

// <Up>

// CONCATENATED MODULE: ./src/index.tsx

// CONCATENATED MODULE: ./src/screenshot.tsx

// Cache bypass so we dont have CORS issues with cached images

// Check if module is in cache

// Copy options to impl options for use in impl

// Create a new module (and put it into the cache)

// Default cache bust is false, it will use the cache

// Default is to fail on error, no placeholder

// EXPORTS

// EXTERNAL MODULE: ./node_modules/jsmind/es6/jsmind.js

// Execute the module function

// Return the exports of the module

// Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache

// The module cache

// The require function

// This entry need to be wrapped in an IIFE because it need to be in strict mode.

// define getter functions for harmony exports

// getDefaultExport function for compatibility with non-harmony modules

// no module.id needed

// no module.loaded needed

// webpackBootstrap

// 命名的快捷键事件处理器

// 当容器不能完全容纳思维导图时，是否允许拖动画布代替鼠标滚动

// 当设置 draggable = true 时，是否隐藏滚动条

// 快捷键映射

// 思维导图各节点之间线条的绘制引擎

// 思维导图线条的样式，直线(straight)或者曲线(curved)

// 思维导图线条的粗细

// 思维导图线条的颜色

// 思维导图距容器外框的最小垂直距离

// 思维导图距容器外框的最小水平距离

// 是否启用快捷键

// 是否支持节点里的HTML元素

// 显示模式 full 根节点两侧 / side 根节点右侧

// 最大的缩放比例

// 最小的缩放比例

// 自定义的线条渲染方法

// 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）

// 节点之间的垂直间距

// 节点之间的水平间距

// 节点文本过长时的样式

// 获取节点

// 配置缩放

//# sourceMappingURL=jsmind.draggable-node.js.map

//# sourceMappingURL=jsmind.js.map
